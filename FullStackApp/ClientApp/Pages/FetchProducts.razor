using System.Text.Json;

@page "/fetchproducts"
@using System.Text.Json


<h3>Product List</h3>

<ul>
   @if (products != null)
    {
        foreach (var product in products)
        {
            <li>@product.Name - $@product.Price</li>
        }
    }
    else
    {
        <li>Loading...</li>
    }
</ul>

@code {
    private Product[]? products;

    [Inject]
    private HttpClient Http { get; set; } 

    protected override async Task OnInitializedAsync()
    {
        if (products == null)
        {
            try
            {
                var response = await Http.GetAsync("/api/productlist");
                response.EnsureSuccessStatusCode();

                var json = await response.Content.ReadAsStringAsync();
                products = JsonSerializer.Deserialize<Product[]>(json) ?? Array.Empty<Product>(); 
            }
            catch (JsonException ex)
            {
                Console.WriteLine($"Error JSON: {ex.Message}");
            }
            catch (HttpRequestException ex)
            {
                Console.WriteLine($"NET: {ex.Message}");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error: {ex.Message}");
            }
        }
    }

    public class Product
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public double Price { get; set; }
        public int Stock { get; set; }
        public Category Category { get; set; }
    }

    public class Category
    {
        public int Id { get; set; }
        public string Name { get; set; }
    }
}